{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./WeatherForecast.css\";\nexport default function WeatherForecast(props) {\n  _s();\n\n  const [loaded, setLoaded] = useState(false);\n  const [forecast, setForecast] = useState(null);\n\n  function handleForecastResponse(response) {\n    setForecast(response.data);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return Math.round(forecast.list[0].main.temp);\n  } else {\n    const apiKey = \"28f52080b9de7ad64256839acc8afe17\";\n    let url = `https://api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=metric`;\n    axios.get(url).then(handleForecastResponse);\n    return null;\n  }\n}\n\n_s(WeatherForecast, \"20/pdcvQnLtcZUd5Lz9vhTDggVQ=\");\n\n_c = WeatherForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"sources":["/Users/joykhalil/Desktop/SheCodes/weather-app-react/weather-app-react/src/WeatherForecast.js"],"names":["React","useState","axios","WeatherForecast","props","loaded","setLoaded","forecast","setForecast","handleForecastResponse","response","data","Math","round","list","main","temp","apiKey","url","city","get","then"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC7C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;;AAEA,WAASQ,sBAAT,CAAgCC,QAAhC,EAA0C;AACxCF,IAAAA,WAAW,CAACE,QAAQ,CAACC,IAAV,CAAX;AACAL,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,MAAID,MAAJ,EAAY;AACV,WAAOO,IAAI,CAACC,KAAL,CAAWN,QAAQ,CAACO,IAAT,CAAc,CAAd,EAAiBC,IAAjB,CAAsBC,IAAjC,CAAP;AACD,GAFD,MAEO;AACL,UAAMC,MAAM,GAAG,kCAAf;AACA,QAAIC,GAAG,GAAI,sDAAqDd,KAAK,CAACe,IAAK,UAASF,MAAO,eAA3F;AAEAf,IAAAA,KAAK,CAACkB,GAAN,CAAUF,GAAV,EAAeG,IAAf,CAAoBZ,sBAApB;AAEA,WAAO,IAAP;AACD;AACF;;GAnBuBN,e;;KAAAA,e","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./WeatherForecast.css\";\n\nexport default function WeatherForecast(props) {\n  const [loaded, setLoaded] = useState(false);\n  const [forecast, setForecast] = useState(null);\n\n  function handleForecastResponse(response) {\n    setForecast(response.data);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return Math.round(forecast.list[0].main.temp);\n  } else {\n    const apiKey = \"28f52080b9de7ad64256839acc8afe17\";\n    let url = `https://api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=metric`;\n\n    axios.get(url).then(handleForecastResponse);\n\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}