{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joykhalil/Desktop/SheCodes/weather-app-react/weather-app-react/src/CurrentWeather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./CurrentWeather.css\";\nimport Axios from \"axios\";\nimport WeatherSearch from \"./WeatherSearch\";\nimport WeatherForecast from \"./WeatherForecast\";\nimport Loader from \"react-loader-spinner\";\nexport default function CurrentWeather(props) {\n  _s();\n\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n  const [city, SetCity] = useState(props.defaultCity);\n\n  function showTemperature(response) {\n    setWeatherData({\n      ready: true,\n      city: response.data.name,\n      date: new Date(response.data.dt * 1000),\n      description: response.data.weather[0].description,\n      icon: response.data.weather[0].icon,\n      temperature: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      wind: response.data.wind.speed\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleCityChange(event) {\n    SetCity(event.target.value);\n  }\n\n  function search() {\n    const apiKey = \"28f52080b9de7ad64256839acc8afe17\";\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    Axios.get(url).then(showTemperature);\n  }\n\n  if (weatherData.ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CurrentWeather\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"form-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mx-sm-4 mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"inputPassword2\",\n            class: \"sr-only\",\n            children: \"Enter city\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            className: \"form-control\",\n            placeholder: \"Enter a city...\",\n            onChange: handleCityChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"btn btn-info\",\n          value: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherSearch, {\n        data: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherForecast, {\n        city: weatherData.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  } else {\n    search();\n    return /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"Circles\",\n      color: \"#2a5974\",\n      height: 300,\n      width: 300,\n      timeout: 9000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(CurrentWeather, \"GbSuLqJcJdeJHfE0bqMdWS2YoAo=\");\n\n_c = CurrentWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentWeather\");","map":{"version":3,"sources":["/Users/joykhalil/Desktop/SheCodes/weather-app-react/weather-app-react/src/CurrentWeather.js"],"names":["React","useState","Axios","WeatherSearch","WeatherForecast","Loader","CurrentWeather","props","weatherData","setWeatherData","ready","city","SetCity","defaultCity","showTemperature","response","data","name","date","Date","dt","description","weather","icon","temperature","main","temp","humidity","wind","speed","handleSubmit","event","preventDefault","search","handleCityChange","target","value","apiKey","url","get","then"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./CurrentWeather.css\";\nimport Axios from \"axios\";\nimport WeatherSearch from \"./WeatherSearch\";\nimport WeatherForecast from \"./WeatherForecast\";\nimport Loader from \"react-loader-spinner\";\n\nexport default function CurrentWeather(props) {\n  const [weatherData, setWeatherData] = useState({ ready: false });\n  const [city, SetCity] = useState(props.defaultCity);\n\n  function showTemperature(response) {\n    setWeatherData({\n      ready: true,\n      city: response.data.name,\n      date: new Date(response.data.dt * 1000),\n      description: response.data.weather[0].description,\n      icon: response.data.weather[0].icon,\n      temperature: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      wind: response.data.wind.speed,\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleCityChange(event) {\n    SetCity(event.target.value);\n  }\n\n  function search() {\n    const apiKey = \"28f52080b9de7ad64256839acc8afe17\";\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    Axios.get(url).then(showTemperature);\n  }\n\n  if (weatherData.ready) {\n    return (\n      <div className=\"CurrentWeather\">\n        <form onSubmit={handleSubmit} className=\"form-inline\">\n          <div className=\"form-group mb-2\"></div>\n          <div className=\"form-group mx-sm-4 mb-6\">\n            <label for=\"inputPassword2\" class=\"sr-only\">\n              Enter city\n            </label>\n            <input\n              type=\"search\"\n              className=\"form-control\"\n              placeholder=\"Enter a city...\"\n              onChange={handleCityChange}\n            />\n          </div>\n          <input type=\"submit\" className=\"btn btn-info\" value=\"Search\" />\n        </form>\n        <br />\n        <WeatherSearch data={weatherData} />\n        <br />\n        <WeatherForecast city={weatherData.city} />\n      </div>\n    );\n  } else {\n    search();\n    return (\n      <Loader\n        type=\"Circles\"\n        color=\"#2a5974\"\n        height={300}\n        width={300}\n        timeout={9000}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}