{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joykhalil/Desktop/SheCodes/weather-app-react/weather-app-react/src/CurrentWeather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./CurrentWeather.css\";\nimport Axios from \"axios\";\nexport default function CurrentWeather(props) {\n  _s();\n\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n\n  function showTemperature(response) {\n    setWeatherData({\n      ready: true,\n      city: response.data.name,\n      date: new Date(response.data.dt * 1000),\n      description: response.data.weather[0].description,\n      temperature: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      wind: response.data.wind.speed\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault(); //Search for a city\n  }\n\n  if (weatherData.ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CurrentWeather\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group mb-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group mx-sm-4 mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputPassword2\",\n              class: \"sr-only\",\n              children: \"Enter city\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"search\",\n              className: \"form-control\",\n              id: \"inputPassword2\",\n              placeholder: \"Enter city\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"btn btn-info\",\n            id: \"city-button\",\n            value: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherSearch, {\n        data: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  } else {\n    const apiKey = \"28f52080b9de7ad64256839acc8afe17\";\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${props.defaultCity}&appid=${apiKey}&units=metric`;\n    Axios.get(url).then(showTemperature);\n    return \"Loading\";\n  }\n}\n\n_s(CurrentWeather, \"tUtfTt5AWoQL1bRls7ZkwlkTJP4=\");\n\n_c = CurrentWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentWeather\");","map":{"version":3,"sources":["/Users/joykhalil/Desktop/SheCodes/weather-app-react/weather-app-react/src/CurrentWeather.js"],"names":["React","useState","Axios","CurrentWeather","props","weatherData","setWeatherData","ready","showTemperature","response","city","data","name","date","Date","dt","description","weather","temperature","main","temp","humidity","wind","speed","handleSubmit","event","preventDefault","apiKey","url","defaultCity","get","then"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,sBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC5C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC;AAAEM,IAAAA,KAAK,EAAE;AAAT,GAAD,CAA9C;;AAEA,WAASC,eAAT,CAAyBC,QAAzB,EAAmC;AACjCH,IAAAA,cAAc,CAAC;AACbC,MAAAA,KAAK,EAAE,IADM;AAEbG,MAAAA,IAAI,EAAED,QAAQ,CAACE,IAAT,CAAcC,IAFP;AAGbC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASL,QAAQ,CAACE,IAAT,CAAcI,EAAd,GAAmB,IAA5B,CAHO;AAIbC,MAAAA,WAAW,EAAEP,QAAQ,CAACE,IAAT,CAAcM,OAAd,CAAsB,CAAtB,EAAyBD,WAJzB;AAKbE,MAAAA,WAAW,EAAET,QAAQ,CAACE,IAAT,CAAcQ,IAAd,CAAmBC,IALnB;AAMbC,MAAAA,QAAQ,EAAEZ,QAAQ,CAACE,IAAT,CAAcQ,IAAd,CAAmBE,QANhB;AAObC,MAAAA,IAAI,EAAEb,QAAQ,CAACE,IAAT,CAAcW,IAAd,CAAmBC;AAPZ,KAAD,CAAd;AASD;;AAED,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN,GAD2B,CAE3B;AACD;;AAED,MAAIrB,WAAW,CAACE,KAAhB,EAAuB;AACrB,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAM,QAAA,QAAQ,EAAEiB,YAAhB;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA,kCACE;AAAK,YAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,KAAK,EAAC,yBAAX;AAAA,oCACE;AAAO,cAAA,GAAG,EAAC,gBAAX;AAA4B,cAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,SAAS,EAAC,cAFZ;AAGE,cAAA,EAAE,EAAC,gBAHL;AAIE,cAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAaE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAC,cAFZ;AAGE,YAAA,EAAE,EAAC,aAHL;AAIE,YAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAuBE,QAAC,aAAD;AAAe,QAAA,IAAI,EAAEnB;AAArB;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA2BD,GA5BD,MA4BO;AACL,UAAMsB,MAAM,GAAG,kCAAf;AACA,QAAIC,GAAG,GAAI,qDAAoDxB,KAAK,CAACyB,WAAY,UAASF,MAAO,eAAjG;AACAzB,IAAAA,KAAK,CAAC4B,GAAN,CAAUF,GAAV,EAAeG,IAAf,CAAoBvB,eAApB;AAEA,WAAO,SAAP;AACD;AACF;;GAvDuBL,c;;KAAAA,c","sourcesContent":["import React, { useState } from \"react\";\nimport \"./CurrentWeather.css\";\nimport Axios from \"axios\";\n\nexport default function CurrentWeather(props) {\n  const [weatherData, setWeatherData] = useState({ ready: false });\n\n  function showTemperature(response) {\n    setWeatherData({\n      ready: true,\n      city: response.data.name,\n      date: new Date(response.data.dt * 1000),\n      description: response.data.weather[0].description,\n      temperature: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      wind: response.data.wind.speed,\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    //Search for a city\n  }\n\n  if (weatherData.ready) {\n    return (\n      <div className=\"CurrentWeather\">\n        <form onSubmit={handleSubmit}>\n          <form className=\"form-inline\">\n            <div class=\"form-group mb-2\"></div>\n            <div class=\"form-group mx-sm-4 mb-6\">\n              <label for=\"inputPassword2\" class=\"sr-only\">\n                Enter city\n              </label>\n              <input\n                type=\"search\"\n                className=\"form-control\"\n                id=\"inputPassword2\"\n                placeholder=\"Enter city\"\n              />\n            </div>\n            <input\n              type=\"submit\"\n              className=\"btn btn-info\"\n              id=\"city-button\"\n              value=\"Search\"\n            />\n          </form>\n        </form>\n        <WeatherSearch data={weatherData} />\n      </div>\n    );\n  } else {\n    const apiKey = \"28f52080b9de7ad64256839acc8afe17\";\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${props.defaultCity}&appid=${apiKey}&units=metric`;\n    Axios.get(url).then(showTemperature);\n\n    return \"Loading\";\n  }\n}\n"]},"metadata":{},"sourceType":"module"}